# Name of the workflow
name: Build and Push to GHCR

# Specifies that this workflow is triggered on 'push' events
on:
  push:
    branches:
      - main # The workflow will trigger on pushes to the 'main' branch

# Defines a job named 'build-and-push'
jobs:
  build-and-push:
    # Specifies that the job should run on the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks to be executed as part of the job
    steps:
      # Checks out the repository code under $GITHUB_WORKSPACE, so the job can access it
      - name: Checkout code
        uses: actions/checkout@v2

      # Logs in to the GitHub Container Registry (GHCR)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io # Specifies the registry URL
          username: ${{ github.actor }} # GitHub actor (user who triggered the workflow)
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN for authentication

      # Sets up a Docker image tag using the GitHub Run Number
      - name: Set up Docker image tag
        id: set-tag
        run: echo "::set-output name=tag::ghcr.io/${{ github.repository }}/nextjs-app:${GITHUB_RUN_NUMBER}"
        # This command sets the output variable 'tag' which can be used in subsequent steps
        # The tag format is: ghcr.io/[repository-name]/nextjs-app:[run-number]

      # Builds and pushes the Docker image to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: . # Specifies the build context (current directory)
          file: ./Dockerfile # Path to the Dockerfile
          push: true # Enables pushing the image to a registry
          tags: ${{ steps.set-tag.outputs.tag }} # Tags the image using the output from the 'set-tag' step
